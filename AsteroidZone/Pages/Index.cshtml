@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<script src="https://www.WebRTC-Experiment.com/RecordRTC.js"></script>
<script src="~/js/SpeechRecognitionScript.js"></script>
<div class="text-center">
    <h1 class="display-4">
        Welcome to Asteroid Zone
    </h1>
    <small>We hope that you will like the game.</small>
    <button id="start-recording" disabled>Start Streaming</button>
    <button id="stop-recording" disabled>Stop Streaming</button>
    <script type="text/javascript">
        const startRecording = document.getElementById('start-recording');
        startRecording.disabled = false;
        const stopRecording = document.getElementById('stop-recording');
        let recordAudio;

        startRecording.onclick = function () {
            document.webSocket = new WebSocket('ws://localhost/AsteroidZone/ws');
            document.webSocket.onmessage = (event) => {
                console.log('WebSocket message received:', event.data);
            }

            startRecording.disabled = true;

            navigator.getUserMedia({
                audio: true
            }, function (stream) {
                recordAudio = RecordRTC(stream, {
                    type: 'audio',
                    mimeType: 'audio/webm',
                    sampleRate: 16000,
                    desiredSampRate: 16000,

                    recorderType: StereoAudioRecorder,
                    numberOfAudioChannels: 1,


                    //1)
                    // get intervals based blobs
                    // value in milliseconds
                    // as you might not want to make detect calls every seconds
                    timeSlice: 500,

                    //2)
                    // as soon as the stream is available
                    ondataavailable: function (blob) {
                        document.webSocket.send(blob);
                    }
                });

                recordAudio.startRecording();
                stopRecording.disabled = false;
            }, function (error) {
                console.error(JSON.stringify(error));
            });
        };

        // 4)
        // on stop button handler
        stopRecording.onclick = function () {
            // recording stopped
            startRecording.disabled = false;
            stopRecording.disabled = true;
        };
    </script>
</div>